{"version":3,"sources":["Pages/background.png","Pages/Data.jsx","App.js","reportWebVitals.js","index.js"],"names":["book","xlsx","utils","book_new","Text","Typography","Title","Data","props","console","log","useState","taobaoResult","setTaobaoResult","loading","setLoading","useEffect","undefined","match","params","name","axios","get","process","then","res","data","newres","map","el","cheapest","disabled","selected","weight","catch","message","error","taobaoColumn","title","key","dataIndex","render","value","record","index","direction","style","width","src","align","Group","fileName","onChange","e","target","list","price","i","opacity","href","link","charAt","className","imgsrc","level","float","fontSize","fontWeight","marginTop","mark","count","replace","badge","length","display","height","elm","backgroundImage","BackgroundImg","bordered","checked","size","saveTaobaoData","a","newData","filter","checkDone","Promise","all","parseData","saveToExcel","dataWithTitle","push","sheetData","aoa_to_sheet","book_append_sheet","write","bookType","type","result","saveAs","Blob","s2ab","success","s","buf","ArrayBuffer","view","Uint8Array","charCodeAt","spinning","padding","onClick","block","icon","SaveOutlined","dataSource","columns","pagination","rowKey","rowClassName","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0398c4a3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.b1eebc25.png\";","import React, { useState, useEffect } from 'react'\r\nimport { Spin, Table, Button, Input, Switch, Radio, Space, message, Typography } from 'antd'\r\nimport {SaveOutlined} from '@ant-design/icons';\r\nimport BackgroundImg from './background.png'\r\nimport {saveAs} from 'file-saver'\r\nimport xlsx from 'xlsx'\r\nimport axios from 'axios';\r\nconst book = xlsx.utils.book_new();\r\nconst { Text, Title } = Typography;\r\n\r\nconst Data = (props) => {\r\n    console.log(props)\r\n    const [taobaoResult, setTaobaoResult] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        if(props.match.params.name !== undefined){\r\n            setLoading(true)\r\n            axios.get(`${process.env.PUBLIC_URL}/Source/${props.match.params.name}/scrapData.json`)\r\n            .then(res => {\r\n                \r\n                if(res.data !== taobaoResult){\r\n                    let newres = res.data.map(el=>{\r\n                      el.cheapest = 0;\r\n                      el.disabled = false\r\n                      el.selected = ''\r\n                      el.weight = 1\r\n                      return el\r\n                    })\r\n                    setTaobaoResult(newres)\r\n                    setLoading(false)\r\n                }\r\n            })\r\n            .catch(()=>{\r\n              message.error('데이터 로드에 실패했습니다.')\r\n              setLoading(false)\r\n            })\r\n        }\r\n    }, [props])\r\n\r\n    const taobaoColumn = [{\r\n        title: 'title', \r\n        key: 'fileName', \r\n        dataIndex: 'fileName',\r\n        render: (value, record, index) => <Space direction=\"vertical\">\r\n          <img style={{width: '120px'}} src={`${process.env.PUBLIC_URL}/Source/${props.match.params.name}/${value}`} />\r\n          <Text>{value}</Text>\r\n        </Space>,\r\n        align: 'center',\r\n        width: 120\r\n      },{\r\n        title: 'data',\r\n        dataIndex: 'data',\r\n        key: 'data',\r\n        width: 952,\r\n        align: 'left',\r\n        render: (value, record, index) => {\r\n          const onChange = e => {\r\n            let value = e.target.value\r\n            let list = [...taobaoResult]\r\n            list[index].selected = value\r\n            list[index].cheapest = list[index].data[value].price\r\n            setTaobaoResult(list)\r\n          }\r\n          return value && value !== undefined ? \r\n          <Radio.Group name={record.fileName} onChange={onChange} value={record.selected}>\r\n          <Space>\r\n            {value.map((el, i) => \r\n              <div style={{width: '110px'}} key={i}>\r\n                <Radio value={i}>{i+1}</Radio>\r\n                <div style={record.selected !== '' && record.selected !== i ? {opacity: 0.6} : {}}>\r\n                <a href={el.link.charAt(0) === '/' ? `https:${el.link}` : el.link} target='_blank'><img className='taobaoThumb' src={el.imgsrc} /></a>\r\n                <div>\r\n                  <Title level={5}>\r\n                    ¥ {el.price}\r\n                    <Text style={{float:'right', fontSize: '12px', fontWeight: 500, marginTop: '2px'}} mark>{el.count.replace('人付款','건')}</Text>\r\n                  </Title>\r\n                </div>\r\n                <Space>\r\n                  {el.badge.length === 0 ? \r\n                    <span style={{display: 'inline-block', width:16, height: 16}}></span>\r\n                    : el.badge.map((elm, i)=> <span key={i} style={{backgroundImage: `url(${BackgroundImg})`}} className={elm}></span>)}\r\n                </Space>\r\n                </div>\r\n              </div>)\r\n            }\r\n          </Space></Radio.Group> : '' \r\n        },\r\n      },{\r\n        title: 'weight',\r\n        dataIndex: 'weight',\r\n        key: 'weight',\r\n        align: 'center',\r\n        render: (value, record, index) => {\r\n          const editTitle = (e) => {\r\n            let value = e.target.value\r\n            let list = [...taobaoResult]\r\n            list[index].weight = value\r\n            setTaobaoResult(list)\r\n          }\r\n          return <Input disabled={record.disabled} bordered={false} style={{fontSize: '12px'}} value={value} onChange={editTitle}/>\r\n        },\r\n      },{\r\n        title: 'active', \r\n        dataIndex: 'disabled',\r\n        key: 'disabled', \r\n        render: (value, record, i) => {\r\n          return <Switch\r\n            checked={!value}\r\n            size=\"small\"\r\n            onChange={(checked) => {\r\n              let list = [...taobaoResult]\r\n              list[i].disabled = !checked\r\n              setTaobaoResult(list)\r\n            }}\r\n          />},\r\n        align: 'center',\r\n        width: 60\r\n      }\r\n    ]\r\n\r\n    const saveTaobaoData = async () => {\r\n        let newData = taobaoResult.filter(el => el.disabled === false)\r\n        let checkDone = newData.filter(el => el.selected === '' || el.cheapest === 0)\r\n        console.log(newData, checkDone)\r\n        if(checkDone.length > 0) {\r\n          message.error('데이터를 확인해주세요. 가격이나 선택이 빠진 상품이 있습니다.')\r\n        }else{\r\n          let parseData = await Promise.all(newData.map(el => {\r\n            return [\r\n              el.fileName.replace('.jpg', ''),\r\n              el.data[el.selected].link,\r\n              el.cheapest,\r\n              el.weight\r\n            ]\r\n          }))\r\n          saveToExcel(parseData)\r\n        }\r\n    }\r\n\r\n    const saveToExcel = async(data) => {\r\n        try {\r\n          console.log('생성시작')\r\n          let dataWithTitle = [['filename', 'url', '최저가격','무게']]\r\n          for(let i=0; i<data.length; i++){\r\n            dataWithTitle.push(data[i])\r\n          }\r\n          console.log(dataWithTitle)\r\n          let sheetData = xlsx.utils.aoa_to_sheet(dataWithTitle)\r\n          console.log('시트데이터 생성완료')\r\n          xlsx.utils.book_append_sheet(book, sheetData, 'data')\r\n          console.log('시트데이터 삽입완료')\r\n          const result = await xlsx.write(book, {bookType: 'xlsx', type: 'binary'})\r\n          saveAs(new Blob([s2ab(result)],{type:\"application/octet-stream\"}), 'result.xlsx');\r\n          console.log('파일생성완료')\r\n          message.success('저장이 완료되었습니다.')\r\n        }catch{\r\n          message.error('뭔가 잘못됨')\r\n        }\r\n    }\r\n\r\n    function s2ab(s) { \r\n        var buf = new ArrayBuffer(s.length); //convert s to arrayBuffer\r\n        var view = new Uint8Array(buf);  //create uint8array as viewer\r\n        for (var i=0; i<s.length; i++) view[i] = s.charCodeAt(i) & 0xFF; //convert to octet\r\n        return buf;    \r\n    }\r\n\r\n    return (\r\n      <Spin spinning={loading} style={{padding: 20}}>\r\n        <Table\r\n            title={()=><Button disabled={taobaoResult.length === 0} onClick={saveTaobaoData} block type=\"primary\" icon={<SaveOutlined />}>데이터 저장하기</Button>}\r\n            style={{marginTop: '20px'}}\r\n            dataSource={taobaoResult}\r\n            size='small'\r\n            columns={taobaoColumn}\r\n            pagination={false}\r\n            rowKey='fileName'\r\n            bordered\r\n            rowClassName={(record, index)=> record.disabled ? 'disabled' : ''}\r\n        />\r\n      </Spin>\r\n    )\r\n}\r\nexport default Data","import './App.css';\r\nimport React from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport 'antd/dist/antd.css'\r\nimport Data from './Pages/Data'\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n          <Route exact path={`/:name`} component={Data}/>\r\n          <Route exact path={`/`} component={Data}/>\r\n        </Switch>\r\n    </Router>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}